#!/bin/bash --login

out() {
	echo "$(date) $SCRIPTNAME[$$]: ${1+$@}" 1>&2
}

login_opsman() {

	out "Remove the old uaa authentication tokens"
	rm ~/.uaac.yml

	out "LOGIN TO OPSMAN"

	uaac target https://$OPS_MANAGER_HOST/uaa --skip-ssl-validation

	uaac token owner get opsman $OPS_MGR_ADMIN_USERNAME -s "" -p $OPS_MGR_ADMIN_PASSWORD
}

scp_files() {
	ssh-keygen -R $OPS_MANAGER_HOST

	out "COPY DEPLOYMENT MANIFEST"
	/usr/bin/expect -c "
		set timeout -1

		spawn scp $SSH_USER@$OPS_MANAGER_HOST:$1 $2

		expect {
			-re ".*Are.*.*yes.*no.*" {
				send yes\r ;
				exp_continue
			}

			"*?assword:*" {
				send $OPS_MGR_SSH_PASSWORD\r
			}
		}
		expect {
			"*?assword:*" {
				send $OPS_MGR_SSH_PASSWORD\r
				interact
			}
		}

		exit
	"
}

export_installation_settings() {
	CONNECTION_URL=https://$OPS_MANAGER_HOST/api/installation_settings

	out "EXPORT INSTALLATION FILES FROM " $CONNECTION_URL

	export UAA_ACCESS_TOKEN=`cat ~/.uaac.yml | grep "access_token:" | cut -d':' -f2 | cut -d' ' -f2`

	curl "$CONNECTION_URL" -X GET -k -H "Authorization: Bearer $UAA_ACCESS_TOKEN" -o $WORK_DIR/installation.yml

	BOSH_MANIFEST_URL=https://$OPS_MANAGER_HOST/api/v0/staged/director/manifest

	curl "$BOSH_MANIFEST_URL" -X GET -k -H "Authorization: Bearer $UAA_ACCESS_TOKEN" -o $DEPLOYMENT_DIR/bosh.yml
}

fetch_bosh_connection_parameters() {
	out "GATHER BOSH DIRECTOR CONNECTION PARAMETERS"

	output=`ruby lib/installationparser/app.rb $WORK_DIR/installation.yml p-bosh director director`

	export DIRECTOR_USERNAME=`echo $output | cut -d '|' -f 1`
	export DIRECTOR_PASSWORD=`echo $output | cut -d '|' -f 2`
	export BOSH_DIRECTOR_IP=`echo $output | cut -d '|' -f 3`
}

bosh_target() {
	local director_ip=$1
	out "DIRECTOR IP: $director_ip"

	if [ "${BOSH_OLD_CLI:-false}" == "true" ]; then
		PRE_TARGET_PARAM=""
		POST_TARGET_PARAM="--ca-cert $CA_CERT_LOCATION"
	else
		PRE_TARGET_PARAM="--ca-cert $CA_CERT_LOCATION"
		POST_TARGET_PARAM=""
	fi

	/usr/bin/expect -c "
		set timeout -1

		spawn bosh $PRE_TARGET_PARAM target $POST_TARGET_PARAM $director_ip

		expect {
			-re ".*Email:*" {
				send $DIRECTOR_USERNAME\r ;
				exp_continue
			}

			"*?assword:*" {
				send $DIRECTOR_PASSWORD\r
				interact
			}
		}

		exit
	"
	return $?
}

bosh_login() {
	out "BOSH LOGIN"
	rm -rf ~/.bosh_config

	# detect if multiple directors are present
	grep -q "," <<< $BOSH_DIRECTOR_IP
	if [ $? -eq 0 ]; then
		out "Detected multiple directors: $BOSH_DIRECTOR_IP"
		local BOSH_DIRECTOR_IPS=$(echo "$BOSH_DIRECTOR_IP" | tr ',' ' ')
		# target the first one available
		for IP in $BOSH_DIRECTOR_IPS; do
			bosh_target $IP && break
		done
	else
		bosh_target $BOSH_DIRECTOR_IP
	fi
}

bosh_login_wo_certs() {
	out "BOSH LOGIN"
	rm -rf ~/.bosh_config

	out "DIRECTOR IP: $BOSH_DIRECTOR_IP"

	/usr/bin/expect -c "
		set timeout -1

		spawn bosh target $BOSH_DIRECTOR_IP

		expect {
			-re ".*username:*" {
				send $DIRECTOR_USERNAME\r ;
				exp_continue
			}

			"*?assword:*" {
				send $DIRECTOR_PASSWORD\r
				interact
			}
		}

		exit
	"
}

logout_all() {
	bosh logout
	uaac token delete $OPS_MGR_ADMIN_USERNAME
}
