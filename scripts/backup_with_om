#!/bin/bash --login

cd $(dirname $0)
SCRIPT_BASE=$(pwd)

source common || die "ERROR: 'common' not found"
source common-backup || die "ERROR: 'common-backup' not found"

config="${BACKUP_CONFIG:-../../config/environment.sh}"
if [[ ! -f "$config" ]]; then
	config="config/environment.sh"
fi
if [[ ! -f "$config" ]]; then
	if [ $# -lt 6 ]; then
		echo "Usage: ./backup_with_om <OPS MGR HOST or IP> <SSH USER> <SSH PASSWORD> <OPS MGR ADMIN USER> <OPS MGR ADMIN PASSWORD> <OUTPUT DIR> <COMPLETE BACKUP>"
		printf "\t %s \t\t\t %s \n" "OPS MGR HOST or IP:" "OPS Manager Host or IP"
		printf "\t %s \t\t\t\t %s \n" "SSH USER:" "OPS Manager SSH Username"
		printf "\t %s \t\t\t\t %s \n" "SSH PASSWORD:" "OPS Manager SSH Password"
		printf "\t %s \t\t\t %s \n" "OPS MGR ADMIN USER:" "OPS Manager Admin Username"
		printf "\t %s \t\t %s \n" "OPS MGR ADMIN PASSWORD:" "OPS Manager Admin Password"
		printf "\t %s \t\t\t\t %s \n" "OUTPUT DIR:" "Backup Directory"
		printf "\t %s \t\t\t %s \n" "COMPLETE BACKUP:" "Specify 'Y' for complete backup"
		exit 1
	fi

	export DATE=`date +%Y_%m_%d`
	export OPS_MANAGER_HOST=$1
	export SSH_USER=$2
	export OPS_MGR_SSH_PASSWORD=$3
	export OPS_MGR_ADMIN_USERNAME=$4
	export OPS_MGR_ADMIN_PASSWORD=$5
	export BACKUP_DIR_NAME=Backup_$DATE
	export WORK_DIR=$6/$BACKUP_DIR_NAME
	export NFS_DIR=$WORK_DIR/nfs_share
	export DEPLOYMENT_DIR=$WORK_DIR/deployments
	export DATABASE_DIR=$WORK_DIR/database
	export COMPLETE_BACKUP=$7
else
	source "$config"
fi

execute() {
	validate_software
	prepare_backup

	login_opsman
	export_root_ca
	export_opsman_files /var/tempest/workspaces/default/deployments/*.yml $DEPLOYMENT_DIR

	export_installation_settings
	fetch_bosh_connection_parameters
	bosh_login
	verify_deployment_backedUp
	export_encryption_key
	bosh_status
	set_bosh_deployment
	export_bosh_vms

	# Backported from v1.6 version in case databases were not migrated.
	# Only new PCF 1.7 installs are using MySQL only.
	# export_cc_db
	# export_uaadb
	# export_consoledb

	# stop_cloud_controller
	export_nfs_server
	export_mysqldb
	# start_cloud_controller
	export_installation
	export_director

	zip_all_together
	logout_all
}

execute
ret=$?
if [ $ret -eq 0 ]; then
	out "Backup SUCCESSFUL"
else
	out "ERROR: There were errors during the backup."
fi
exit $ret
