#!/bin/bash

IDENTIFIER=RABBITMQ-TILE

source ../common || die "ERROR: 'common' not found"
source ../common-backup || die "ERROR: 'common-backup' not found"
source ../config/environment.sh || die "ERROR: configuration file 'environment.sh' not found"

# Change the Name of the Output tar archive to include tile name
set_tile_identifier() {
	export BACKUP_DIR_NAME=$IDENTIFIER-$BACKUP_DIR_NAME
}

validate_additional_configuration_variables() {
	echo "VALIDATE MANDATORY CONFIG"
	if [ -z "$RABBITMQ_URL" ]; then
		die "RABBITMQ_URL MISSING: Please set RABBITMQ_URL environment variable to match your system"
	fi
}

# This step depends on the pcf-utils tools to get access to the credentials from
# OpsManager export installation

validate_connection() {
	for host in $RABBITMQ_URL; do
		nc -w1 -z $host 443
		if [ $? -ne 0 ]; then
			die 2 "CONNECTION ERROR ON HOST: $host PORT: 443"
		fi
	done
}

prepare_backup() {
	out "Preparing Backup"
	local ret=0
	mkdir -p "$WORK_DIR" || ret=1
	mkdir -p "$DEPLOYMENT_DIR" || ret=1
	if [ $ret -eq 0 ]; then
		out "Preparations DONE"
	else
		die "ERROR: Preparations FAILED"
	fi
}

export_rabbitmqdump() {
	for host in $RABBITMQ_URL; do
		curl -X GET -u $RABBITMQ_USER:$RABBITMQ_PASS https://$RABBITMQ_URL/api/definitions -k -o $WORK_DIR/rabbitmq.json
		if [ $? -ne 0 ]; then
			die 2 "CURL ON HOST: $host PORT: 443 FAILED"
		fi
		validate_dump $WORK_DIR/rabbitmq.json
	done
}

validate_dump() {
	DUMPFILE=$1
	if [ -f $DUMPFILE ]; then
		if [ -n "`grep rabbit_version $DUMPFILE`" ]; then
			out "BACKUP FOR $(basename $DUMPFILE) SUCCESSFULLY"
		else
			die 2 "BACKUP FOR $(basename $DUMPFILE) FAILED"
		fi
	fi
}

validate_software
validate_additional_configuration_variables
set_tile_identifier
login_opsman
prepare_backup
export_installation_settings
fetch_rabbitmq_credentials
validate_connection
export_rabbitmqdump
zip_all_together
logout_all
cleanup_backup
