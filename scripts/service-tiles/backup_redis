#!/bin/bash

IDENTIFIER=REDIS-TILE

source ../common || die "ERROR: 'common' not found"
source ../common-backup || die "ERROR: 'common-backup' not found"
source ../config/environment.sh || die "ERROR: configuration file 'environment.sh' not found"

# Change the Name of the Output tar archive to include tile name
set_tile_identifier() {
	export BACKUP_DIR_NAME=$IDENTIFIER-$BACKUP_DIR_NAME
}


fetch_redis_dedicated_credentials() {
	echo "GATHER REDIS DEDICATED CREDENTIALS FROM INSTALLATION EXPORT"
	output=`sh appassembler/bin/app $WORK_DIR/installation.yml p-redis dedicated-node vcap 2>/dev/null`
	export REDIS_DEDICATED_USER=`echo $output | cut -d '|' -f 1`
	export REDIS_DEDICATED_PASS=`echo $output | cut -d '|' -f 2`
	export REDIS_DEDICATED_HOSTS=`echo $output | cut -d '|' -f 3`
	export REDIS_DEDICATED_HOSTS=`echo -n $REDIS_DEDICATED_HOSTS | sed 's/,/ /g'`
	if [ -z "$REDIS_DEDICATED_USER" -a -z "$REDIS_DEDICATED_PASS" -a -z "$REDIS_DEDICATED_HOSTS" ]; then
		echo "Either REDIS_DEDICATED_USER, REDIS_DEDICATED_PASS or REDIS_DEDICATED_HOSTS is empty"
		exit 2
	fi
}

validate_connection() {
	nc -w1 -z $1 22
	if [ $? -ne 0 ]; then
		echo "CONNECTION ERROR ON HOST: $1 PORT: 22"
		exit 2
	fi
}

prepare_backup() {
	out "Preparing Backup"
	local ret=0
	mkdir -p "$WORK_DIR" || ret=1
	mkdir -p "$DEPLOYMENT_DIR" || ret=1
	mkdir -p "$WORK_DIR/redis_dedicated" || ret=1
	mkdir -p "$WORK_DIR/redis_shared" || ret=1
	if [ $ret -eq 0 ]; then
		out "Preparations DONE"
	else
		die "ERROR: Preparations FAILED"
	fi
}

perform_redis_shared_dump() {
	validate_connection $REDIS_HOST
	echo "RSYNC VCAP STORE"
	/usr/bin/expect -c "
		set timeout -1

		spawn rsync -a --exclude '/var/vcap/store/lost+found' --exclude 'lost+found' $REDIS_USER@$REDIS_HOST:/var/vcap/store/cf-redis-broker/ $WORK_DIR/redis_shared
		expect {
			-re ".*Are.*.*yes.*no.*" {
				send yes\r;
				exp_continue
			}
			"*?assword:*" {
				send $REDIS_PASS\r
			}
		}
		expect {
			"*?assword:*" {
				send $REDIS_PASS\r
				interact
			}
		}
	exit"
	validate_redisdump $WORK_DIR/redis_shared/statefile.json
}

perform_redis_dedicacted_dump() {
	for redis_instance in $REDIS_DEDICATED_HOSTS; do
		validate_connection $redis_instance
		redis_instance_folder=`echo $redis_instance | tr "." "_"`
		echo "RSYNC VCAP STORE"
		/usr/bin/expect -c "
			set timeout -1

			spawn rsync -a --exclude '/var/vcap/store/lost+found' --exclude 'lost+found' $REDIS_DEDICATED_USER@$redis_instance:/var/vcap/store/redis/ $WORK_DIR/redis_dedicated/$redis_instance_folder
			expect {
				-re ".*Are.*.*yes.*no.*" {
					send yes\r;
					exp_continue
				}
				"*?assword:*" {
					send $REDIS_DEDICATED_PASS\r
				}
			}
			expect {
				"*?assword:*" {
					send $REDIS_DEDICATED_PASS\r
					interact
				}
			}
		exit
		"
		validate_redisdump $WORK_DIR/redis_dedicated/$redis_instance_folder/redis.conf
	done
}

validate_redisdump() {
	DUMPFILE=$1
	if [ -f $DUMPFILE ]; then
		if [ -n "`egrep '(available_instances|rename)' $DUMPFILE`" ]; then
			echo "BACKUP FOR $(basename $DUMPFILE) SUCCESSFULLY"
		else
			echo "BACKUP FOR $(basename $DUMPFILE) FAILED"
			exit 2
		fi
	fi
}

validate_software
login_opsman
prepare_backup
set_tile_identifier
export_installation_settings
fetch_redis_credentials
fetch_redis_dedicated_credentials
perform_redis_dedicacted_dump
perform_redis_shared_dump
zip_all_together
logout_all
cleanup_backup
