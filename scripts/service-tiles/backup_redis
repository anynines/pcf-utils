#!/bin/bash

cd ..
SCRIPT_BASE=$(pwd)
IDENTIFIER=REDIS-TILE

source common || die "$IDENTIFIER: ERROR: 'common' not found"
source common-backup || die "$IDENTIFIER: ERROR: 'common-backup' not found"
source config/environment.sh || die "$IDENTIFIER: ERROR: configuration file 'environment.sh' not found"

# Change the Name of the Output tar archive to include tile name
set_tile_identifier() {
	eval "$(sed "s#^export BACKUP_DIR_NAME=.*#export BACKUP_DIR_NAME=$IDENTIFIER-$BACKUP_DIR_NAME#" config/environment.sh)"
}

validate_connection() {
	out "$IDENTIFIER: Validating connection"
	nc -w1 -z $1 22
	if [ $? -ne 0 ]; then
		die "$IDENTIFIER: ERROR: Connection to host: $host port: 22"
	fi
	out "$IDENTIFIER: Connection test SUCCESSFUL"
}

prepare_backup() {
	out "$IDENTIFIER: Preparing Backup"
	local ret=0
	mkdir -p "$WORK_DIR" || ret=1
	mkdir -p "$DEPLOYMENT_DIR" || ret=1
	mkdir -p "$WORK_DIR/redis_dedicated" || ret=1
	mkdir -p "$WORK_DIR/redis_shared" || ret=1
	if [ $ret -eq 0 ]; then
		out "$IDENTIFIER: Preparations DONE"
	else
		die "$IDENTIFIER: ERROR: Preparations FAILED"
	fi
}

export_redis_shared_dump() {
	validate_connection $REDIS_HOST
	out "$IDENTIFIER: Exporting data from shared VM"
	/usr/bin/expect -c "
		set timeout -1

		spawn rsync -a --exclude '/var/vcap/store/lost+found' --exclude 'lost+found' $REDIS_USER@$REDIS_HOST:/var/vcap/store/cf-redis-broker/ $WORK_DIR/redis_shared
		expect {
			-re ".*Are.*.*yes.*no.*" {
				send yes\r;
				exp_continue
			}
			"*?assword:*" {
				send $REDIS_PASS\r
			}
		}
		expect {
			"*?assword:*" {
				send $REDIS_PASS\r
				interact
			}
		}
	exit"
	validate_redisdump $WORK_DIR/redis_shared/statefile.json
	out "$IDENTIFIER: Export SUCCESSFUL"
}

export_redis_dedicacted_dump() {
	for redis_instance in $REDIS_DEDICATED_HOSTS; do
		out "$IDENTIFIER: Exporting data from dedicated node '$redis_instance'"

		validate_connection $redis_instance
		redis_instance_folder=`echo $redis_instance | tr "." "_"`
		echo "RSYNC VCAP STORE"
		/usr/bin/expect -c "
			set timeout -1

			spawn rsync -a --exclude '/var/vcap/store/lost+found' --exclude 'lost+found' $REDIS_DEDICATED_USER@$redis_instance:/var/vcap/store/redis/ $WORK_DIR/redis_dedicated/$redis_instance_folder
			expect {
				-re ".*Are.*.*yes.*no.*" {
					send yes\r;
					exp_continue
				}
				"*?assword:*" {
					send $REDIS_DEDICATED_PASS\r
				}
			}
			expect {
				"*?assword:*" {
					send $REDIS_DEDICATED_PASS\r
					interact
				}
			}
		exit
		"
		validate_redisdump $WORK_DIR/redis_dedicated/$redis_instance_folder/redis.conf
		if [ $? -eq 0 ]; then
			out "$IDENTIFIER: Export from '$redis_instance' SUCCESSFUL"
		else
			out "$IDENTIFIER: Export from '$redis_instance' FAILED"
		fi
	done
	out "$IDENTIFIER: Export DONE"
}

validate_redisdump() {
	DUMPFILE=$1
	out "$IDENTIFIER: Validating '$(basename $DUMPFILE)'"
	if [ -f $DUMPFILE ]; then
		if [ -n "`egrep '(available_instances|rename)' $DUMPFILE`" ]; then
			out "$IDENTIFIER: Validation for '$(basename $DUMPFILE)' SUCCESSFUL"
		else
			# don't die here because we want to try backing up the remaining dedicated nodes
			out "$IDENTIFIER: Validation for '$(basename $DUMPFILE)' FAILED"
			return 2
		fi
	fi
}

set_tile_identifier
validate_software
prepare_backup
login_opsman
export_installation_settings
fetch_redis_credentials
fetch_redis_dedicated_credentials
export_redis_dedicacted_dump
export_redis_shared_dump
zip_all_together
logout_all
cleanup_backup

out "$IDENTIFIER: Backup DONE"
